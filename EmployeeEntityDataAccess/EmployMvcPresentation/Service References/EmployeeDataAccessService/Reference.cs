//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EmployMvcPresentation.EmployeeDataAccessService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EmployeeContract", Namespace="http://schemas.datacontract.org/2004/07/EmployeeDataAccessService.DataContracts")]
    [System.SerializableAttribute()]
    public partial class EmployeeContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DepartmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime HireDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Department {
            get {
                return this.DepartmentField;
            }
            set {
                if ((object.ReferenceEquals(this.DepartmentField, value) != true)) {
                    this.DepartmentField = value;
                    this.RaisePropertyChanged("Department");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime HireDate {
            get {
                return this.HireDateField;
            }
            set {
                if ((this.HireDateField.Equals(value) != true)) {
                    this.HireDateField = value;
                    this.RaisePropertyChanged("HireDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="EmployeeDataAccessService.IEmployeeDataAccess")]
    public interface IEmployeeDataAccess {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeDataAccess/Fetch", ReplyAction="http://tempuri.org/IEmployeeDataAccess/FetchResponse")]
        EmployMvcPresentation.EmployeeDataAccessService.EmployeeContract[] Fetch();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeDataAccess/Fetch", ReplyAction="http://tempuri.org/IEmployeeDataAccess/FetchResponse")]
        System.Threading.Tasks.Task<EmployMvcPresentation.EmployeeDataAccessService.EmployeeContract[]> FetchAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeDataAccess/FetchById", ReplyAction="http://tempuri.org/IEmployeeDataAccess/FetchByIdResponse")]
        EmployMvcPresentation.EmployeeDataAccessService.EmployeeContract FetchById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeDataAccess/FetchById", ReplyAction="http://tempuri.org/IEmployeeDataAccess/FetchByIdResponse")]
        System.Threading.Tasks.Task<EmployMvcPresentation.EmployeeDataAccessService.EmployeeContract> FetchByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeDataAccess/FetchByName", ReplyAction="http://tempuri.org/IEmployeeDataAccess/FetchByNameResponse")]
        EmployMvcPresentation.EmployeeDataAccessService.EmployeeContract[] FetchByName(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeDataAccess/FetchByName", ReplyAction="http://tempuri.org/IEmployeeDataAccess/FetchByNameResponse")]
        System.Threading.Tasks.Task<EmployMvcPresentation.EmployeeDataAccessService.EmployeeContract[]> FetchByNameAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeDataAccess/FetchByTitle", ReplyAction="http://tempuri.org/IEmployeeDataAccess/FetchByTitleResponse")]
        EmployMvcPresentation.EmployeeDataAccessService.EmployeeContract[] FetchByTitle(string title);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeDataAccess/FetchByTitle", ReplyAction="http://tempuri.org/IEmployeeDataAccess/FetchByTitleResponse")]
        System.Threading.Tasks.Task<EmployMvcPresentation.EmployeeDataAccessService.EmployeeContract[]> FetchByTitleAsync(string title);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeDataAccess/Add", ReplyAction="http://tempuri.org/IEmployeeDataAccess/AddResponse")]
        void Add(EmployMvcPresentation.EmployeeDataAccessService.EmployeeContract employee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeDataAccess/Add", ReplyAction="http://tempuri.org/IEmployeeDataAccess/AddResponse")]
        System.Threading.Tasks.Task AddAsync(EmployMvcPresentation.EmployeeDataAccessService.EmployeeContract employee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeDataAccess/Update", ReplyAction="http://tempuri.org/IEmployeeDataAccess/UpdateResponse")]
        void Update(EmployMvcPresentation.EmployeeDataAccessService.EmployeeContract employee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeDataAccess/Update", ReplyAction="http://tempuri.org/IEmployeeDataAccess/UpdateResponse")]
        System.Threading.Tasks.Task UpdateAsync(EmployMvcPresentation.EmployeeDataAccessService.EmployeeContract employee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeDataAccess/Delete", ReplyAction="http://tempuri.org/IEmployeeDataAccess/DeleteResponse")]
        void Delete(EmployMvcPresentation.EmployeeDataAccessService.EmployeeContract employee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeDataAccess/Delete", ReplyAction="http://tempuri.org/IEmployeeDataAccess/DeleteResponse")]
        System.Threading.Tasks.Task DeleteAsync(EmployMvcPresentation.EmployeeDataAccessService.EmployeeContract employee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeDataAccess/DeleteById", ReplyAction="http://tempuri.org/IEmployeeDataAccess/DeleteByIdResponse")]
        void DeleteById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeDataAccess/DeleteById", ReplyAction="http://tempuri.org/IEmployeeDataAccess/DeleteByIdResponse")]
        System.Threading.Tasks.Task DeleteByIdAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEmployeeDataAccessChannel : EmployMvcPresentation.EmployeeDataAccessService.IEmployeeDataAccess, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EmployeeDataAccessClient : System.ServiceModel.ClientBase<EmployMvcPresentation.EmployeeDataAccessService.IEmployeeDataAccess>, EmployMvcPresentation.EmployeeDataAccessService.IEmployeeDataAccess {
        
        public EmployeeDataAccessClient() {
        }
        
        public EmployeeDataAccessClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EmployeeDataAccessClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmployeeDataAccessClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmployeeDataAccessClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public EmployMvcPresentation.EmployeeDataAccessService.EmployeeContract[] Fetch() {
            return base.Channel.Fetch();
        }
        
        public System.Threading.Tasks.Task<EmployMvcPresentation.EmployeeDataAccessService.EmployeeContract[]> FetchAsync() {
            return base.Channel.FetchAsync();
        }
        
        public EmployMvcPresentation.EmployeeDataAccessService.EmployeeContract FetchById(int id) {
            return base.Channel.FetchById(id);
        }
        
        public System.Threading.Tasks.Task<EmployMvcPresentation.EmployeeDataAccessService.EmployeeContract> FetchByIdAsync(int id) {
            return base.Channel.FetchByIdAsync(id);
        }
        
        public EmployMvcPresentation.EmployeeDataAccessService.EmployeeContract[] FetchByName(string name) {
            return base.Channel.FetchByName(name);
        }
        
        public System.Threading.Tasks.Task<EmployMvcPresentation.EmployeeDataAccessService.EmployeeContract[]> FetchByNameAsync(string name) {
            return base.Channel.FetchByNameAsync(name);
        }
        
        public EmployMvcPresentation.EmployeeDataAccessService.EmployeeContract[] FetchByTitle(string title) {
            return base.Channel.FetchByTitle(title);
        }
        
        public System.Threading.Tasks.Task<EmployMvcPresentation.EmployeeDataAccessService.EmployeeContract[]> FetchByTitleAsync(string title) {
            return base.Channel.FetchByTitleAsync(title);
        }
        
        public void Add(EmployMvcPresentation.EmployeeDataAccessService.EmployeeContract employee) {
            base.Channel.Add(employee);
        }
        
        public System.Threading.Tasks.Task AddAsync(EmployMvcPresentation.EmployeeDataAccessService.EmployeeContract employee) {
            return base.Channel.AddAsync(employee);
        }
        
        public void Update(EmployMvcPresentation.EmployeeDataAccessService.EmployeeContract employee) {
            base.Channel.Update(employee);
        }
        
        public System.Threading.Tasks.Task UpdateAsync(EmployMvcPresentation.EmployeeDataAccessService.EmployeeContract employee) {
            return base.Channel.UpdateAsync(employee);
        }
        
        public void Delete(EmployMvcPresentation.EmployeeDataAccessService.EmployeeContract employee) {
            base.Channel.Delete(employee);
        }
        
        public System.Threading.Tasks.Task DeleteAsync(EmployMvcPresentation.EmployeeDataAccessService.EmployeeContract employee) {
            return base.Channel.DeleteAsync(employee);
        }
        
        public void DeleteById(int id) {
            base.Channel.DeleteById(id);
        }
        
        public System.Threading.Tasks.Task DeleteByIdAsync(int id) {
            return base.Channel.DeleteByIdAsync(id);
        }
    }
}
